{"ast":null,"code":"var _jsxFileName = \"/home/kiki/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n      console.log('Increment Click', this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: this.handleIncrement,\n        className: \"btn btn-sm btn-secondary\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? 'warning' : 'primary';\n    return classes;\n  }\n\n  formatCount() {\n    // return this.state.count === 0 ? 'Zero' : this.state.count\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;\n/*renderTags(){\n        if(this.state.tags.length===0) return <p>\"There are no tags\"</p>;\n        return   <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n    };\n\n    render(){\n        return <React.Fragment>\n            {this.state.tags.length===0 && 'Please add an item'}\n            {this.renderTags()}\n        </React.Fragment>\n    }*/\n\n/*constructor(){\n    super()\n   this.handleIncrement= this.handleIncrement.bind(this);\n}*/","map":{"version":3,"sources":["/home/kiki/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","handleIncrement","setState","console","log","render","getBadgeClasses","formatCount","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf;AAFF,KADoB;;AAAA,SAK5BC,eAL4B,GAKZ,MAAI;AAChB,WAAKC,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA1B,OAAd;AAA6YI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,IAA/B;AAChZ,KAP2B;AAAA;;AAS7BC,EAAAA,MAAM,GAAG;AACJ,wBACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA,kBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,OAAO,EAAE,KAAKN,eADlB;AACkC,QAAA,SAAS,EAAC,0BAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA,kBACK,KAAKH,KAAL,CAAWE,IAAX,CAAgBQ,GAAhB,CAAoBC,GAAG,iBAAI;AAAA,oBAAeA;AAAf,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA,gBAA3B;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AACDH,EAAAA,eAAe,GAAG;AACd,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKZ,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOW,OAAP;AACH;;AAEDH,EAAAA,WAAW,GAAE;AACV;AACA,UAAK;AAACR,MAAAA;AAAD,QAAS,KAAKD,KAAnB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACF;;AA/B2B;;AAkChC,eAAeF,OAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nclass Counter extends Component {\n    state = {\n        count: 0,\n        tags: ['tag1','tag2','tag3']\n    };\n    handleIncrement=()=>{\n        this.setState({count:this.state.count + 1});                                                                                                                                                                                                                                                                                                                                                                 console.log('Increment Click', this)\n    }\n\n   render() { \n        return( \n            <div>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button \n                    onCLick={this.handleIncrement}className='btn btn-sm btn-secondary'>Increment</button>\n                <ul>\n                    {this.state.tags.map(tag => <li key={tag}>{tag}</li>)}\n                </ul>\n            </div>\n            );\n    }\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += (this.state.count === 0) ? 'warning' : 'primary';\n        return classes;\n    }\n\n    formatCount(){\n       // return this.state.count === 0 ? 'Zero' : this.state.count\n       const{count}= this.state;\n       return count === 0 ? 'Zero' : count;\n    }\n}\n \nexport default Counter;\n/*renderTags(){\n        if(this.state.tags.length===0) return <p>\"There are no tags\"</p>;\n        return   <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n    };\n\n    render(){\n        return <React.Fragment>\n            {this.state.tags.length===0 && 'Please add an item'}\n            {this.renderTags()}\n        </React.Fragment>\n    }*/\n    /*constructor(){\n        super()\n       this.handleIncrement= this.handleIncrement.bind(this);\n    }*/\n"]},"metadata":{},"sourceType":"module"}