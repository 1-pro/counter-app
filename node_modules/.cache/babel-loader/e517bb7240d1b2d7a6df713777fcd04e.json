{"ast":null,"code":"var _jsxFileName = \"/home/kiki/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n  }\n\n  /* handleIncrement = () =>{\n       this.setState({count:this.state.count + 1});                                                                                                                                                                                                                                                                                                                                                                 console.log('Increment Click', this)\n   }*/\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        /*onCLick={this.handleIncrement}*/\n        className: \"btn btn-secondary btn-sm \",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 \";\n    classes = this.state.count === 0 ? 'badge-warning' : 'badge-primary';\n    return classes;\n  }\n\n  formatCount() {\n    // return this.state.count === 0 ? 'Zero' : this.state.count\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;\n/*renderTags(){\n        if(this.state.tags.length===0) return <p>\"There are no tags\"</p>;\n        return   <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n    };\n\n    render(){\n        return <React.Fragment>\n            {this.state.tags.length===0 && 'Please add an item'}\n            {this.renderTags()}\n        </React.Fragment>\n    }*/\n\n/*constructor(){\n    super()\n   this.handleIncrement= this.handleIncrement.bind(this);\n}*/","map":{"version":3,"sources":["/home/kiki/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","render","getBadgeClasses","formatCount","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,OAAN,SAAsBF,KAAK,CAACC,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCE,KADkC,GAC1B;AACJC,MAAAA,KAAK,EAAE,CADH;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf;AAFA,KAD0B;AAAA;;AAKnC;AACH;AACA;AAEGC,EAAAA,MAAM,GAAG;AACJ,wBACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAG,KAAKC,eAAL,EAAlB;AAAA,kBAA2C,KAAKC,WAAL;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACG;AAAmC,QAAA,SAAS,EAAC,2BADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA,kBACK,KAAKL,KAAL,CAAWE,IAAX,CAAgBI,GAAhB,CAAoBC,GAAG,iBAAI;AAAA,oBAAeA;AAAf,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA,gBAA3B;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AACDH,EAAAA,eAAe,GAAG;AACd,QAAII,OAAO,GAAG,YAAd;AACAA,IAAAA,OAAO,GAAI,KAAKR,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,eAA3B,GAA6C,eAAvD;AACA,WAAOO,OAAP;AACH;;AAEDH,EAAAA,WAAW,GAAE;AACV;AACA,UAAM;AAACJ,MAAAA;AAAD,QAAS,KAAKD,KAApB;AACA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACF;;AA/BiC;;AAkCtC,eAAeF,OAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nclass Counter extends React.Component {\n    state = {\n        count: 0,\n      tags: ['tag1','tag2','tag3']\n    };\n   /* handleIncrement = () =>{\n        this.setState({count:this.state.count + 1});                                                                                                                                                                                                                                                                                                                                                                 console.log('Increment Click', this)\n    }*/\n\n   render() { \n        return( \n            <div>\n                <span className ={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button \n                   /*onCLick={this.handleIncrement}*/ className='btn btn-secondary btn-sm '>Increment</button>\n                <ul>\n                    {this.state.tags.map(tag => <li key={tag}>{tag}</li>)}\n                </ul>\n            </div>\n            );\n    }\n    getBadgeClasses() {\n        let classes = \"badge m-2 \";\n        classes = (this.state.count === 0) ? 'badge-warning' : 'badge-primary';\n        return classes;\n    }\n\n    formatCount(){\n       // return this.state.count === 0 ? 'Zero' : this.state.count\n       const {count}= this.state;\n       return count === 0 ? 'Zero' : count;\n    }\n}\n \nexport default Counter;\n/*renderTags(){\n        if(this.state.tags.length===0) return <p>\"There are no tags\"</p>;\n        return   <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n    };\n\n    render(){\n        return <React.Fragment>\n            {this.state.tags.length===0 && 'Please add an item'}\n            {this.renderTags()}\n        </React.Fragment>\n    }*/\n    /*constructor(){\n        super()\n       this.handleIncrement= this.handleIncrement.bind(this);\n    }*/\n"]},"metadata":{},"sourceType":"module"}